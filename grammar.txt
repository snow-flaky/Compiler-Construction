<program>--><moduleDeclarations><otherModules><driverModule><otherModules>
<moduleDeclarations>--><moduleDeclaration><moduleDeclarations>|eps
<moduleDeclaration>-->DECLARE MODULE ID SEMICOL
<otherModules>--><module><otherModules>|eps
<driverModule>-->DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <moduleDef>
<module>-->DEF MODULE ID ENDDEF TAKES INPUT SQBO <input_plist> SQBC SEMICOL <ret><moduleDef>
<ret>-->RETURNS SQBO <output_plist> SQBC SEMICOL|eps
<input_plist>-->ID COLON <dataType> <N1>
<N1>-->COMMA ID COLON <dataType> <N1>|eps
<output_plist>-->ID COLON <type> <N2>
<N2>-->COMMA ID COLON <type> <N2>|eps
<dataType>-->INTEGER|REAL|BOOLEAN|ARRAY SQBO <range_arrays> SQBC OF <type>
<range_arrays>--><index> RANGEOP <index>
<type>-->INTEGER|REAL|BOOLEAN
<moduleDef>-->START <statements> END
<statements>--><statement><statements>|eps
<statement>--><ioStmt>|<simpleStmt>|<declareStmt>|<condionalStmt>|<iterativeStmt>
<ioStmt>-->GET_VALUE BO ID BC SEMICOL|PRINT BO <var> BC SEMICOL
<boolConstt>-->TRUE|FALSE
<var_id_num>-->ID <whichId> | NUM | RNUM
<var>--><var_id_num> | <boolConstt>
<whichId>-->SQBO <index> SQBC|eps
<simpleStmt>--><assignmentStmt>|<moduleReuseStmt>
<assignmentStmt>-->ID <whichStmt>
<whichStmt>--><lvalueIDStmt>|<lvalueARRStmt>
<lvalueIDStmt>-->ASSIGNOP <expression> SEMICOL
<lvalueARRStmt>-->SQBO <index> SQBC ASSIGNOP <expression> SEMICOL
<index>-->NUM|ID
<moduleReuseStmt>--><optional> USE MODULE ID WITH PARAMETERS <idList> SEMICOL
<optional>-->SQBO <idList> SQBC ASSIGNOP|eps
<idList>-->ID <N3>
<N3>-->COMMA ID <N3>|eps
<expression>--><arithmeticOrBooleanExpr>|<U>
<U>--><unary_op><new_NT>
<new_NT>-->BO<arithmeticExpr>BC|<var_id_num>
<unary_op>->PLUS|MINUS
<arithmeticOrBooleanExpr>--><AnyTerm> <N7>
<N7>--><logicalOp> <AnyTerm> <N7>|eps
<AnyTerm>--><arithmeticExpr> <N8> | <boolConstt>
<N8>--><relationalOp> <arithmeticExpr>|eps
<arithmeticExpr>--><term> <N4>
<N4>--><op1> <term> <N4>|eps
<term>--><factor> <N5>
<N5>--><op2> <factor> <N5>|eps
<factor>-->BO <arithmeticOrBooleanExpr> BC
<factor>--><var_id_num>
<op1>-->PLUS|MINUS
<op2>-->MUL|DIV
<logicalOp>-->AND|OR
<relationalOp>-->LT|LE|GT|GE|EQ|NE
<declareStmt>-->DECLARE <idList> COLON <dataType> SEMICOL
<condionalStmt>-->SWITCH BO ID BC START <caseStmts><default> END
<caseStmts>-->CASE <value> COLON <statements> BREAK SEMICOL <N9>
<N9>-->CASE <value> COLON <statements> BREAK SEMICOL <N9>|eps
<value>-->NUM|TRUE|FALSE
<default>-->DEFAULT COLON <statements> BREAK SEMICOL |eps
<iterativeStmt>-->FOR BO ID IN <range> BC START <statements> END | WHILE BO <arithmeticOrBooleanExpr> BC START <statements> END
<range>-->NUM RANGEOP NUM
